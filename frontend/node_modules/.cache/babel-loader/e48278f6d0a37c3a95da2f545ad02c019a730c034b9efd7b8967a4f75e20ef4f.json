{"ast":null,"code":"import axios from 'axios';\n\n// Set base URL for all axios requests\naxios.defaults.baseURL = 'http://localhost:5000';\n\n// Add request interceptor to handle errors globally\naxios.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n    console.error('Response error:', error.response.data);\n    return Promise.reject(error.response.data);\n  } else if (error.request) {\n    // The request was made but no response was received\n    console.error('Request error:', error.request);\n    return Promise.reject({\n      message: 'No response from server. Please try again.'\n    });\n  } else {\n    // Something happened in setting up the request that triggered an Error\n    console.error('Error:', error.message);\n    return Promise.reject({\n      message: 'Request failed. Please try again.'\n    });\n  }\n});\nexport default axios;","map":{"version":3,"names":["axios","defaults","baseURL","interceptors","response","use","error","console","data","Promise","reject","request","message"],"sources":["C:/Users/bikky/Downloads/crm/crm/frontend/src/config/axios.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Set base URL for all axios requests\r\naxios.defaults.baseURL = 'http://localhost:5000';\r\n\r\n// Add request interceptor to handle errors globally\r\naxios.interceptors.response.use(\r\n    response => response,\r\n    error => {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            console.error('Response error:', error.response.data);\r\n            return Promise.reject(error.response.data);\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            console.error('Request error:', error.request);\r\n            return Promise.reject({ message: 'No response from server. Please try again.' });\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.error('Error:', error.message);\r\n            return Promise.reject({ message: 'Request failed. Please try again.' });\r\n        }\r\n    }\r\n);\r\n\r\nexport default axios; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACAA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,uBAAuB;;AAEhD;AACAF,KAAK,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC3BD,QAAQ,IAAIA,QAAQ,EACpBE,KAAK,IAAI;EACL,IAAIA,KAAK,CAACF,QAAQ,EAAE;IAChB;IACA;IACAG,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACF,QAAQ,CAACI,IAAI,CAAC;IACrD,OAAOC,OAAO,CAACC,MAAM,CAACJ,KAAK,CAACF,QAAQ,CAACI,IAAI,CAAC;EAC9C,CAAC,MAAM,IAAIF,KAAK,CAACK,OAAO,EAAE;IACtB;IACAJ,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACK,OAAO,CAAC;IAC9C,OAAOF,OAAO,CAACC,MAAM,CAAC;MAAEE,OAAO,EAAE;IAA6C,CAAC,CAAC;EACpF,CAAC,MAAM;IACH;IACAL,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACM,OAAO,CAAC;IACtC,OAAOH,OAAO,CAACC,MAAM,CAAC;MAAEE,OAAO,EAAE;IAAoC,CAAC,CAAC;EAC3E;AACJ,CACJ,CAAC;AAED,eAAeZ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}