{"ast":null,"code":"import axios from'axios';// Set base URL for all axios requests\n// Use environment variable for production, fallback to localhost for development\nconst API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:5000';axios.defaults.baseURL=API_BASE_URL;// Add request interceptor to handle errors globally\naxios.interceptors.response.use(response=>response,error=>{if(error.response){// The request was made and the server responded with a status code\n// that falls out of the range of 2xx\nconsole.error('Response error:',error.response.data);return Promise.reject(error.response.data);}else if(error.request){// The request was made but no response was received\nconsole.error('Request error:',error.request);return Promise.reject({message:'No response from server. Please try again.'});}else{// Something happened in setting up the request that triggered an Error\nconsole.error('Error:',error.message);return Promise.reject({message:'Request failed. Please try again.'});}});export default axios;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","defaults","baseURL","interceptors","response","use","error","console","data","Promise","reject","request","message"],"sources":["C:/Users/bikky/Downloads/crm/crm/frontend/src/config/axios.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Set base URL for all axios requests\r\n// Use environment variable for production, fallback to localhost for development\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\naxios.defaults.baseURL = API_BASE_URL;\r\n\r\n// Add request interceptor to handle errors globally\r\naxios.interceptors.response.use(\r\n    response => response,\r\n    error => {\r\n        if (error.response) {\r\n            // The request was made and the server responded with a status code\r\n            // that falls out of the range of 2xx\r\n            console.error('Response error:', error.response.data);\r\n            return Promise.reject(error.response.data);\r\n        } else if (error.request) {\r\n            // The request was made but no response was received\r\n            console.error('Request error:', error.request);\r\n            return Promise.reject({ message: 'No response from server. Please try again.' });\r\n        } else {\r\n            // Something happened in setting up the request that triggered an Error\r\n            console.error('Error:', error.message);\r\n            return Promise.reject({ message: 'Request failed. Please try again.' });\r\n        }\r\n    }\r\n);\r\n\r\nexport default axios; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA;AACA,KAAM,CAAAC,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAuB,CAC7EJ,KAAK,CAACK,QAAQ,CAACC,OAAO,CAAGL,YAAY,CAErC;AACAD,KAAK,CAACO,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC3BD,QAAQ,EAAIA,QAAQ,CACpBE,KAAK,EAAI,CACL,GAAIA,KAAK,CAACF,QAAQ,CAAE,CAChB;AACA;AACAG,OAAO,CAACD,KAAK,CAAC,iBAAiB,CAAEA,KAAK,CAACF,QAAQ,CAACI,IAAI,CAAC,CACrD,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACJ,KAAK,CAACF,QAAQ,CAACI,IAAI,CAAC,CAC9C,CAAC,IAAM,IAAIF,KAAK,CAACK,OAAO,CAAE,CACtB;AACAJ,OAAO,CAACD,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAACK,OAAO,CAAC,CAC9C,MAAO,CAAAF,OAAO,CAACC,MAAM,CAAC,CAAEE,OAAO,CAAE,4CAA6C,CAAC,CAAC,CACpF,CAAC,IAAM,CACH;AACAL,OAAO,CAACD,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAACM,OAAO,CAAC,CACtC,MAAO,CAAAH,OAAO,CAACC,MAAM,CAAC,CAAEE,OAAO,CAAE,mCAAoC,CAAC,CAAC,CAC3E,CACJ,CACJ,CAAC,CAED,cAAe,CAAAhB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}