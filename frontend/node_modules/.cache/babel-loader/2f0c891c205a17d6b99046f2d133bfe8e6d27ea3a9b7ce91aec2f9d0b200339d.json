{"ast":null,"code":"import _objectSpread from\"C:/Users/bikky/Downloads/crm/crm/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Container,Typography,Paper,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Button,Dialog,DialogTitle,DialogContent,DialogActions,TextField,MenuItem,Grid,Select,InputLabel,FormControl,Chip,Box}from'@mui/material';import{Add as AddIcon,Edit as EditIcon,Delete as DeleteIcon}from'@mui/icons-material';import axios from'axios';import{useAuth}from'../context/AuthContext';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Projects=()=>{const{user}=useAuth();const[projects,setProjects]=useState([]);const[open,setOpen]=useState(false);const[clients,setClients]=useState([]);const[managers,setManagers]=useState([]);const[employees,setEmployees]=useState([]);const[selectedProject,setSelectedProject]=useState(null);const[formData,setFormData]=useState({name:'',description:'',client:'',startDate:'',endDate:'',status:'Not Started',priority:'Medium',projectManager:'',teamMembers:[],budget:''});const statuses=['Not Started','In Progress','On Hold','Completed'];const priorities=['Low','Medium','High'];useEffect(()=>{fetchProjects();fetchClients();fetchManagers();fetchEmployees();},[]);const fetchProjects=async()=>{try{const response=await axios.get('/api/projects');setProjects(response.data);}catch(error){console.error('Error fetching projects:',error);}};const fetchClients=async()=>{try{const response=await axios.get('/api/customers');setClients(response.data);}catch(error){console.error('Error fetching clients:',error);}};const fetchManagers=async()=>{try{const response=await axios.get('/api/users/managers');setManagers(response.data);}catch(error){console.error('Error fetching managers:',error);}};const fetchEmployees=async()=>{try{const response=await axios.get('/api/users/employees');setEmployees(response.data);}catch(error){console.error('Error fetching employees:',error);}};const handleOpen=function(){let project=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;if(project){setSelectedProject(project);setFormData({name:project.name,description:project.description,client:project.client._id,startDate:project.startDate.split('T')[0],endDate:project.endDate.split('T')[0],status:project.status,priority:project.priority,projectManager:project.projectManager._id,teamMembers:project.teamMembers.map(member=>member._id),budget:project.budget});}else{setSelectedProject(null);setFormData({name:'',description:'',client:'',startDate:'',endDate:'',status:'Not Started',priority:'Medium',projectManager:'',teamMembers:[],budget:''});}setOpen(true);};const handleClose=()=>{setOpen(false);setSelectedProject(null);};const handleSubmit=async e=>{e.preventDefault();try{if(selectedProject){await axios.patch(\"/api/projects/\".concat(selectedProject._id),formData);}else{await axios.post('/api/projects',formData);}fetchProjects();handleClose();}catch(error){console.error('Error saving project:',error);}};const handleDelete=async id=>{if(window.confirm('Are you sure you want to delete this project?')){try{await axios.delete(\"/api/projects/\".concat(id));fetchProjects();}catch(error){console.error('Error deleting project:',error);}}};const handleChange=e=>{const{name,value}=e.target;setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));};return/*#__PURE__*/_jsxs(Box,{sx:{width:'100%',px:{xs:1,sm:3,md:6},pt:3},children:[/*#__PURE__*/_jsxs(Grid,{container:true,justifyContent:\"space-between\",alignItems:\"center\",sx:{mb:3},children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",gutterBottom:true,children:\"Projects\"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:(user.role==='admin'||user.role==='manager')&&/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:()=>handleOpen(),children:\"Add Project\"})})]}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,sx:{width:'100%'},children:/*#__PURE__*/_jsxs(Table,{sx:{width:'100%'},children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Name\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Client\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Status\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Priority\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Start Date\"}),/*#__PURE__*/_jsx(TableCell,{children:\"End Date\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Project Manager\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Team Size\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:projects.map(project=>{var _project$client,_project$projectManag,_project$projectManag2,_project$teamMembers;return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:project.name}),/*#__PURE__*/_jsx(TableCell,{children:(_project$client=project.client)===null||_project$client===void 0?void 0:_project$client.name}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:project.status,color:project.status==='Completed'?'success':project.status==='In Progress'?'primary':project.status==='On Hold'?'warning':'default',size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:project.priority,color:project.priority==='High'?'error':project.priority==='Medium'?'warning':'info',size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:new Date(project.startDate).toLocaleDateString()}),/*#__PURE__*/_jsx(TableCell,{children:new Date(project.endDate).toLocaleDateString()}),/*#__PURE__*/_jsxs(TableCell,{children:[(_project$projectManag=project.projectManager)===null||_project$projectManag===void 0?void 0:_project$projectManag.name,/*#__PURE__*/_jsx(Typography,{variant:\"caption\",display:\"block\",color:\"textSecondary\",children:(_project$projectManag2=project.projectManager)===null||_project$projectManag2===void 0?void 0:_project$projectManag2.department})]}),/*#__PURE__*/_jsx(TableCell,{children:((_project$teamMembers=project.teamMembers)===null||_project$teamMembers===void 0?void 0:_project$teamMembers.length)||0}),/*#__PURE__*/_jsx(TableCell,{children:(user.role==='admin'||user.role==='manager')&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{size:\"small\",onClick:()=>handleOpen(project),startIcon:/*#__PURE__*/_jsx(EditIcon,{}),children:\"Edit\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",color:\"error\",onClick:()=>handleDelete(project._id),startIcon:/*#__PURE__*/_jsx(DeleteIcon,{}),children:\"Delete\"})]})})]},project._id);})})]})}),/*#__PURE__*/_jsx(Dialog,{open:open,onClose:handleClose,maxWidth:\"md\",fullWidth:true,children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(DialogTitle,{children:selectedProject?'Edit Project':'Add Project'}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,sx:{mt:1},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Name\",name:\"name\",value:formData.name,onChange:handleChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,required:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Client\"}),/*#__PURE__*/_jsx(Select,{name:\"client\",value:formData.client,onChange:handleChange,label:\"Client\",children:clients.map(client=>/*#__PURE__*/_jsxs(MenuItem,{value:client._id,children:[client.name,\" - \",client.company]},client._id))})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Description\",name:\"description\",value:formData.description,onChange:handleChange,multiline:true,rows:3,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Start Date\",name:\"startDate\",type:\"date\",value:formData.startDate,onChange:handleChange,required:true,InputLabelProps:{shrink:true}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"End Date\",name:\"endDate\",type:\"date\",value:formData.endDate,onChange:handleChange,required:true,InputLabelProps:{shrink:true}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,required:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Status\"}),/*#__PURE__*/_jsx(Select,{name:\"status\",value:formData.status,onChange:handleChange,label:\"Status\",children:statuses.map(status=>/*#__PURE__*/_jsx(MenuItem,{value:status,children:status},status))})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,required:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Priority\"}),/*#__PURE__*/_jsx(Select,{name:\"priority\",value:formData.priority,onChange:handleChange,label:\"Priority\",children:priorities.map(priority=>/*#__PURE__*/_jsx(MenuItem,{value:priority,children:priority},priority))})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,required:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Project Manager\"}),/*#__PURE__*/_jsx(Select,{name:\"projectManager\",value:formData.projectManager,onChange:handleChange,label:\"Project Manager\",children:managers.map(manager=>/*#__PURE__*/_jsxs(MenuItem,{value:manager._id,children:[manager.name,\" - \",manager.department,\" (\",manager.role,\")\"]},manager._id))})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Team Members\"}),/*#__PURE__*/_jsx(Select,{multiple:true,name:\"teamMembers\",value:formData.teamMembers,onChange:handleChange,label:\"Team Members\",renderValue:selected=>/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexWrap:'wrap',gap:0.5},children:selected.map(value=>{const employee=employees.find(emp=>emp._id===value);return/*#__PURE__*/_jsx(Chip,{label:employee?employee.name:value,size:\"small\"},value);})}),children:employees.map(employee=>/*#__PURE__*/_jsxs(MenuItem,{value:employee._id,children:[employee.name,\" - \",employee.department]},employee._id))})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Budget\",name:\"budget\",type:\"number\",value:formData.budget,onChange:handleChange,required:true,InputProps:{startAdornment:/*#__PURE__*/_jsx(Typography,{children:\"$\"})}})})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleClose,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",children:selectedProject?'Update':'Create'})]})]})})]});};export default Projects;","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","MenuItem","Grid","Select","InputLabel","FormControl","Chip","Box","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","axios","useAuth","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Projects","user","projects","setProjects","open","setOpen","clients","setClients","managers","setManagers","employees","setEmployees","selectedProject","setSelectedProject","formData","setFormData","name","description","client","startDate","endDate","status","priority","projectManager","teamMembers","budget","statuses","priorities","fetchProjects","fetchClients","fetchManagers","fetchEmployees","response","get","data","error","console","handleOpen","project","arguments","length","undefined","_id","split","map","member","handleClose","handleSubmit","e","preventDefault","patch","concat","post","handleDelete","id","window","confirm","delete","handleChange","value","target","prev","_objectSpread","sx","width","px","xs","sm","md","pt","children","container","justifyContent","alignItems","mb","item","variant","component","gutterBottom","role","color","startIcon","onClick","_project$client","_project$projectManag","_project$projectManag2","_project$teamMembers","label","size","Date","toLocaleDateString","display","department","onClose","maxWidth","fullWidth","onSubmit","spacing","mt","onChange","required","company","multiline","rows","type","InputLabelProps","shrink","manager","multiple","renderValue","selected","flexWrap","gap","employee","find","emp","InputProps","startAdornment"],"sources":["C:/Users/bikky/Downloads/crm/crm/frontend/src/components/Projects.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Container,\r\n    Typography,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Button,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    TextField,\r\n    MenuItem,\r\n    Grid,\r\n    Select,\r\n    InputLabel,\r\n    FormControl,\r\n    Chip,\r\n    Box\r\n} from '@mui/material';\r\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon } from '@mui/icons-material';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst Projects = () => {\r\n    const { user } = useAuth();\r\n    const [projects, setProjects] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [clients, setClients] = useState([]);\r\n    const [managers, setManagers] = useState([]);\r\n    const [employees, setEmployees] = useState([]);\r\n    const [selectedProject, setSelectedProject] = useState(null);\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        description: '',\r\n        client: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        status: 'Not Started',\r\n        priority: 'Medium',\r\n        projectManager: '',\r\n        teamMembers: [],\r\n        budget: ''\r\n    });\r\n\r\n    const statuses = ['Not Started', 'In Progress', 'On Hold', 'Completed'];\r\n    const priorities = ['Low', 'Medium', 'High'];\r\n\r\n    useEffect(() => {\r\n        fetchProjects();\r\n        fetchClients();\r\n        fetchManagers();\r\n        fetchEmployees();\r\n    }, []);\r\n\r\n    const fetchProjects = async () => {\r\n        try {\r\n            const response = await axios.get('/api/projects');\r\n            setProjects(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching projects:', error);\r\n        }\r\n    };\r\n\r\n    const fetchClients = async () => {\r\n        try {\r\n            const response = await axios.get('/api/customers');\r\n            setClients(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching clients:', error);\r\n        }\r\n    };\r\n\r\n    const fetchManagers = async () => {\r\n        try {\r\n            const response = await axios.get('/api/users/managers');\r\n            setManagers(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching managers:', error);\r\n        }\r\n    };\r\n\r\n    const fetchEmployees = async () => {\r\n        try {\r\n            const response = await axios.get('/api/users/employees');\r\n            setEmployees(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching employees:', error);\r\n        }\r\n    };\r\n\r\n    const handleOpen = (project = null) => {\r\n        if (project) {\r\n            setSelectedProject(project);\r\n            setFormData({\r\n                name: project.name,\r\n                description: project.description,\r\n                client: project.client._id,\r\n                startDate: project.startDate.split('T')[0],\r\n                endDate: project.endDate.split('T')[0],\r\n                status: project.status,\r\n                priority: project.priority,\r\n                projectManager: project.projectManager._id,\r\n                teamMembers: project.teamMembers.map(member => member._id),\r\n                budget: project.budget\r\n            });\r\n        } else {\r\n            setSelectedProject(null);\r\n            setFormData({\r\n                name: '',\r\n                description: '',\r\n                client: '',\r\n                startDate: '',\r\n                endDate: '',\r\n                status: 'Not Started',\r\n                priority: 'Medium',\r\n                projectManager: '',\r\n                teamMembers: [],\r\n                budget: ''\r\n            });\r\n        }\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setSelectedProject(null);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (selectedProject) {\r\n                await axios.patch(`/api/projects/${selectedProject._id}`, formData);\r\n            } else {\r\n                await axios.post('/api/projects', formData);\r\n            }\r\n            fetchProjects();\r\n            handleClose();\r\n        } catch (error) {\r\n            console.error('Error saving project:', error);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        if (window.confirm('Are you sure you want to delete this project?')) {\r\n            try {\r\n                await axios.delete(`/api/projects/${id}`);\r\n                fetchProjects();\r\n            } catch (error) {\r\n                console.error('Error deleting project:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: '100%', px: { xs: 1, sm: 3, md: 6 }, pt: 3 }}>\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\" sx={{ mb: 3}}>\r\n                <Grid item>\r\n                    <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n                        Projects\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    {(user.role === 'admin' || user.role === 'manager') && (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            startIcon={<AddIcon />}\r\n                            onClick={() => handleOpen()}\r\n                        >\r\n                            Add Project\r\n                        </Button>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <TableContainer component={Paper} sx={{ width: '100%' }}>\r\n                <Table sx={{ width: '100%' }}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell>Client</TableCell>\r\n                            <TableCell>Status</TableCell>\r\n                            <TableCell>Priority</TableCell>\r\n                            <TableCell>Start Date</TableCell>\r\n                            <TableCell>End Date</TableCell>\r\n                            <TableCell>Project Manager</TableCell>\r\n                            <TableCell>Team Size</TableCell>\r\n                            <TableCell>Actions</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {projects.map((project) => (\r\n                            <TableRow key={project._id}>\r\n                                <TableCell>{project.name}</TableCell>\r\n                                <TableCell>{project.client?.name}</TableCell>\r\n                                <TableCell>\r\n                                    <Chip \r\n                                        label={project.status}\r\n                                        color={\r\n                                            project.status === 'Completed' ? 'success' :\r\n                                            project.status === 'In Progress' ? 'primary' :\r\n                                            project.status === 'On Hold' ? 'warning' : 'default'\r\n                                        }\r\n                                        size=\"small\"\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Chip \r\n                                        label={project.priority}\r\n                                        color={\r\n                                            project.priority === 'High' ? 'error' :\r\n                                            project.priority === 'Medium' ? 'warning' : 'info'\r\n                                        }\r\n                                        size=\"small\"\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell>{new Date(project.startDate).toLocaleDateString()}</TableCell>\r\n                                <TableCell>{new Date(project.endDate).toLocaleDateString()}</TableCell>\r\n                                <TableCell>\r\n                                    {project.projectManager?.name}\r\n                                    <Typography variant=\"caption\" display=\"block\" color=\"textSecondary\">\r\n                                        {project.projectManager?.department}\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell>{project.teamMembers?.length || 0}</TableCell>\r\n                                <TableCell>\r\n                                    {(user.role === 'admin' || user.role === 'manager') && (\r\n                                        <>\r\n                                            <Button\r\n                                                size=\"small\"\r\n                                                onClick={() => handleOpen(project)}\r\n                                                startIcon={<EditIcon />}\r\n                                            >\r\n                                                Edit\r\n                                            </Button>\r\n                                            <Button\r\n                                                size=\"small\"\r\n                                                color=\"error\"\r\n                                                onClick={() => handleDelete(project._id)}\r\n                                                startIcon={<DeleteIcon />}\r\n                                            >\r\n                                                Delete\r\n                                            </Button>\r\n                                        </>\r\n                                    )}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <Dialog open={open} onClose={handleClose} maxWidth=\"md\" fullWidth>\r\n                <form onSubmit={handleSubmit}>\r\n                    <DialogTitle>{selectedProject ? 'Edit Project' : 'Add Project'}</DialogTitle>\r\n                    <DialogContent>\r\n                        <Grid container spacing={2} sx={{ mt: 1 }}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    value={formData.name}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <FormControl fullWidth required>\r\n                                    <InputLabel>Client</InputLabel>\r\n                                    <Select\r\n                                        name=\"client\"\r\n                                        value={formData.client}\r\n                                        onChange={handleChange}\r\n                                        label=\"Client\"\r\n                                    >\r\n                                        {clients.map((client) => (\r\n                                            <MenuItem key={client._id} value={client._id}>\r\n                                                {client.name} - {client.company}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Description\"\r\n                                    name=\"description\"\r\n                                    value={formData.description}\r\n                                    onChange={handleChange}\r\n                                    multiline\r\n                                    rows={3}\r\n                                    required\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Start Date\"\r\n                                    name=\"startDate\"\r\n                                    type=\"date\"\r\n                                    value={formData.startDate}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    InputLabelProps={{ shrink: true }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"End Date\"\r\n                                    name=\"endDate\"\r\n                                    type=\"date\"\r\n                                    value={formData.endDate}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    InputLabelProps={{ shrink: true }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <FormControl fullWidth required>\r\n                                    <InputLabel>Status</InputLabel>\r\n                                    <Select\r\n                                        name=\"status\"\r\n                                        value={formData.status}\r\n                                        onChange={handleChange}\r\n                                        label=\"Status\"\r\n                                    >\r\n                                        {statuses.map((status) => (\r\n                                            <MenuItem key={status} value={status}>\r\n                                                {status}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <FormControl fullWidth required>\r\n                                    <InputLabel>Priority</InputLabel>\r\n                                    <Select\r\n                                        name=\"priority\"\r\n                                        value={formData.priority}\r\n                                        onChange={handleChange}\r\n                                        label=\"Priority\"\r\n                                    >\r\n                                        {priorities.map((priority) => (\r\n                                            <MenuItem key={priority} value={priority}>\r\n                                                {priority}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <FormControl fullWidth required>\r\n                                    <InputLabel>Project Manager</InputLabel>\r\n                                    <Select\r\n                                        name=\"projectManager\"\r\n                                        value={formData.projectManager}\r\n                                        onChange={handleChange}\r\n                                        label=\"Project Manager\"\r\n                                    >\r\n                                        {managers.map((manager) => (\r\n                                            <MenuItem key={manager._id} value={manager._id}>\r\n                                                {manager.name} - {manager.department} ({manager.role})\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel>Team Members</InputLabel>\r\n                                    <Select\r\n                                        multiple\r\n                                        name=\"teamMembers\"\r\n                                        value={formData.teamMembers}\r\n                                        onChange={handleChange}\r\n                                        label=\"Team Members\"\r\n                                        renderValue={(selected) => (\r\n                                            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                                                {selected.map((value) => {\r\n                                                    const employee = employees.find(emp => emp._id === value);\r\n                                                    return (\r\n                                                        <Chip \r\n                                                            key={value} \r\n                                                            label={employee ? employee.name : value}\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                    );\r\n                                                })}\r\n                                            </Box>\r\n                                        )}\r\n                                    >\r\n                                        {employees.map((employee) => (\r\n                                            <MenuItem key={employee._id} value={employee._id}>\r\n                                                {employee.name} - {employee.department}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Budget\"\r\n                                    name=\"budget\"\r\n                                    type=\"number\"\r\n                                    value={formData.budget}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    InputProps={{\r\n                                        startAdornment: <Typography>$</Typography>\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                            {selectedProject ? 'Update' : 'Create'}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Projects; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}