{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bikky\\\\Downloads\\\\crm\\\\crm\\\\frontend\\\\src\\\\components\\\\Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, MenuItem, Grid, Select, InputLabel, FormControl, Chip, Box } from '@mui/material';\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon } from '@mui/icons-material';\nimport axios from 'axios';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [projects, setProjects] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [clients, setClients] = useState([]);\n  const [managers, setManagers] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    client: '',\n    startDate: '',\n    endDate: '',\n    status: 'Not Started',\n    priority: 'Medium',\n    projectManager: '',\n    teamMembers: [],\n    budget: ''\n  });\n  const statuses = ['Not Started', 'In Progress', 'On Hold', 'Completed'];\n  const priorities = ['Low', 'Medium', 'High'];\n  useEffect(() => {\n    fetchProjects();\n    fetchClients();\n    fetchManagers();\n    fetchEmployees();\n  }, []);\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get('/api/projects');\n      setProjects(response.data);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n    }\n  };\n  const fetchClients = async () => {\n    try {\n      const response = await axios.get('/api/customers');\n      setClients(response.data);\n    } catch (error) {\n      console.error('Error fetching clients:', error);\n    }\n  };\n  const fetchManagers = async () => {\n    try {\n      const response = await axios.get('/api/users/managers');\n      setManagers(response.data);\n    } catch (error) {\n      console.error('Error fetching managers:', error);\n    }\n  };\n  const fetchEmployees = async () => {\n    try {\n      const response = await axios.get('/api/users/employees');\n      setEmployees(response.data);\n    } catch (error) {\n      console.error('Error fetching employees:', error);\n    }\n  };\n  const handleOpen = (project = null) => {\n    if (project) {\n      setSelectedProject(project);\n      setFormData({\n        name: project.name,\n        description: project.description,\n        client: project.client._id,\n        startDate: project.startDate.split('T')[0],\n        endDate: project.endDate.split('T')[0],\n        status: project.status,\n        priority: project.priority,\n        projectManager: project.projectManager._id,\n        teamMembers: project.teamMembers.map(member => member._id),\n        budget: project.budget\n      });\n    } else {\n      setSelectedProject(null);\n      setFormData({\n        name: '',\n        description: '',\n        client: '',\n        startDate: '',\n        endDate: '',\n        status: 'Not Started',\n        priority: 'Medium',\n        projectManager: '',\n        teamMembers: [],\n        budget: ''\n      });\n    }\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    setSelectedProject(null);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (selectedProject) {\n        await axios.patch(`/api/projects/${selectedProject._id}`, formData);\n      } else {\n        await axios.post('/api/projects', formData);\n      }\n      fetchProjects();\n      handleClose();\n    } catch (error) {\n      console.error('Error saving project:', error);\n    }\n  };\n  const handleDelete = async id => {\n    if (window.confirm('Are you sure you want to delete this project?')) {\n      try {\n        await axios.delete(`/api/projects/${id}`);\n        fetchProjects();\n      } catch (error) {\n        console.error('Error deleting project:', error);\n      }\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      px: {\n        xs: 1,\n        sm: 3,\n        md: 6\n      },\n      pt: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h1\",\n          gutterBottom: true,\n          children: \"Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: (user.role === 'admin' || user.role === 'manager') && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 40\n          }, this),\n          onClick: () => handleOpen(),\n          children: \"Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Client\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Project Manager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Team Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: projects.map(project => {\n            var _project$client, _project$projectManag, _project$projectManag2, _project$teamMembers;\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: project.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: (_project$client = project.client) === null || _project$client === void 0 ? void 0 : _project$client.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: project.status,\n                  color: project.status === 'Completed' ? 'success' : project.status === 'In Progress' ? 'primary' : project.status === 'On Hold' ? 'warning' : 'default',\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: project.priority,\n                  color: project.priority === 'High' ? 'error' : project.priority === 'Medium' ? 'warning' : 'info',\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: new Date(project.startDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: new Date(project.endDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [(_project$projectManag = project.projectManager) === null || _project$projectManag === void 0 ? void 0 : _project$projectManag.name, /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  display: \"block\",\n                  color: \"textSecondary\",\n                  children: (_project$projectManag2 = project.projectManager) === null || _project$projectManag2 === void 0 ? void 0 : _project$projectManag2.department\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: ((_project$teamMembers = project.teamMembers) === null || _project$teamMembers === void 0 ? void 0 : _project$teamMembers.length) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: (user.role === 'admin' || user.role === 'manager') && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    onClick: () => handleOpen(project),\n                    startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 60\n                    }, this),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    color: \"error\",\n                    onClick: () => handleDelete(project._id),\n                    startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 60\n                    }, this),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 33\n              }, this)]\n            }, project._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: selectedProject ? 'Edit Project' : 'Add Project'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Name\",\n                name: \"name\",\n                value: formData.name,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Client\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"client\",\n                  value: formData.client,\n                  onChange: handleChange,\n                  label: \"Client\",\n                  children: clients.map(client => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: client._id,\n                    children: [client.name, \" - \", client.company]\n                  }, client._id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Description\",\n                name: \"description\",\n                value: formData.description,\n                onChange: handleChange,\n                multiline: true,\n                rows: 3,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Start Date\",\n                name: \"startDate\",\n                type: \"date\",\n                value: formData.startDate,\n                onChange: handleChange,\n                required: true,\n                InputLabelProps: {\n                  shrink: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"End Date\",\n                name: \"endDate\",\n                type: \"date\",\n                value: formData.endDate,\n                onChange: handleChange,\n                required: true,\n                InputLabelProps: {\n                  shrink: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"status\",\n                  value: formData.status,\n                  onChange: handleChange,\n                  label: \"Status\",\n                  children: statuses.map(status => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: status,\n                    children: status\n                  }, status, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Priority\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"priority\",\n                  value: formData.priority,\n                  onChange: handleChange,\n                  label: \"Priority\",\n                  children: priorities.map(priority => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: priority,\n                    children: priority\n                  }, priority, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Project Manager\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"projectManager\",\n                  value: formData.projectManager,\n                  onChange: handleChange,\n                  label: \"Project Manager\",\n                  children: managers.map(manager => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: manager._id,\n                    children: [manager.name, \" - \", manager.department, \" (\", manager.role, \")\"]\n                  }, manager._id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Team Members\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  multiple: true,\n                  name: \"teamMembers\",\n                  value: formData.teamMembers,\n                  onChange: handleChange,\n                  label: \"Team Members\",\n                  renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      flexWrap: 'wrap',\n                      gap: 0.5\n                    },\n                    children: selected.map(value => {\n                      const employee = employees.find(emp => emp._id === value);\n                      return /*#__PURE__*/_jsxDEV(Chip, {\n                        label: employee ? employee.name : value,\n                        size: \"small\"\n                      }, value, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 401,\n                        columnNumber: 57\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 45\n                  }, this),\n                  children: employees.map(employee => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: employee._id,\n                    children: [employee.name, \" - \", employee.department]\n                  }, employee._id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Budget\",\n                name: \"budget\",\n                type: \"number\",\n                value: formData.budget,\n                onChange: handleChange,\n                required: true,\n                InputProps: {\n                  startAdornment: /*#__PURE__*/_jsxDEV(Typography, {\n                    children: \"$\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 57\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: selectedProject ? 'Update' : 'Create'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n};\n_s(Projects, \"P0EydnCXz+hWfSY55ZLLrEO5hlc=\", false, function () {\n  return [useAuth];\n});\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","MenuItem","Grid","Select","InputLabel","FormControl","Chip","Box","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","axios","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","Projects","_s","user","projects","setProjects","open","setOpen","clients","setClients","managers","setManagers","employees","setEmployees","selectedProject","setSelectedProject","formData","setFormData","name","description","client","startDate","endDate","status","priority","projectManager","teamMembers","budget","statuses","priorities","fetchProjects","fetchClients","fetchManagers","fetchEmployees","response","get","data","error","console","handleOpen","project","_id","split","map","member","handleClose","handleSubmit","e","preventDefault","patch","post","handleDelete","id","window","confirm","delete","handleChange","value","target","prev","sx","width","px","xs","sm","md","pt","children","container","justifyContent","alignItems","mb","item","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","role","color","startIcon","onClick","_project$client","_project$projectManag","_project$projectManag2","_project$teamMembers","label","size","Date","toLocaleDateString","display","department","length","onClose","maxWidth","fullWidth","onSubmit","spacing","mt","onChange","required","company","multiline","rows","type","InputLabelProps","shrink","manager","multiple","renderValue","selected","flexWrap","gap","employee","find","emp","InputProps","startAdornment","_c","$RefreshReg$"],"sources":["C:/Users/bikky/Downloads/crm/crm/frontend/src/components/Projects.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Container,\r\n    Typography,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Button,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    TextField,\r\n    MenuItem,\r\n    Grid,\r\n    Select,\r\n    InputLabel,\r\n    FormControl,\r\n    Chip,\r\n    Box\r\n} from '@mui/material';\r\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon } from '@mui/icons-material';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst Projects = () => {\r\n    const { user } = useAuth();\r\n    const [projects, setProjects] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [clients, setClients] = useState([]);\r\n    const [managers, setManagers] = useState([]);\r\n    const [employees, setEmployees] = useState([]);\r\n    const [selectedProject, setSelectedProject] = useState(null);\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        description: '',\r\n        client: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        status: 'Not Started',\r\n        priority: 'Medium',\r\n        projectManager: '',\r\n        teamMembers: [],\r\n        budget: ''\r\n    });\r\n\r\n    const statuses = ['Not Started', 'In Progress', 'On Hold', 'Completed'];\r\n    const priorities = ['Low', 'Medium', 'High'];\r\n\r\n    useEffect(() => {\r\n        fetchProjects();\r\n        fetchClients();\r\n        fetchManagers();\r\n        fetchEmployees();\r\n    }, []);\r\n\r\n    const fetchProjects = async () => {\r\n        try {\r\n            const response = await axios.get('/api/projects');\r\n            setProjects(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching projects:', error);\r\n        }\r\n    };\r\n\r\n    const fetchClients = async () => {\r\n        try {\r\n            const response = await axios.get('/api/customers');\r\n            setClients(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching clients:', error);\r\n        }\r\n    };\r\n\r\n    const fetchManagers = async () => {\r\n        try {\r\n            const response = await axios.get('/api/users/managers');\r\n            setManagers(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching managers:', error);\r\n        }\r\n    };\r\n\r\n    const fetchEmployees = async () => {\r\n        try {\r\n            const response = await axios.get('/api/users/employees');\r\n            setEmployees(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching employees:', error);\r\n        }\r\n    };\r\n\r\n    const handleOpen = (project = null) => {\r\n        if (project) {\r\n            setSelectedProject(project);\r\n            setFormData({\r\n                name: project.name,\r\n                description: project.description,\r\n                client: project.client._id,\r\n                startDate: project.startDate.split('T')[0],\r\n                endDate: project.endDate.split('T')[0],\r\n                status: project.status,\r\n                priority: project.priority,\r\n                projectManager: project.projectManager._id,\r\n                teamMembers: project.teamMembers.map(member => member._id),\r\n                budget: project.budget\r\n            });\r\n        } else {\r\n            setSelectedProject(null);\r\n            setFormData({\r\n                name: '',\r\n                description: '',\r\n                client: '',\r\n                startDate: '',\r\n                endDate: '',\r\n                status: 'Not Started',\r\n                priority: 'Medium',\r\n                projectManager: '',\r\n                teamMembers: [],\r\n                budget: ''\r\n            });\r\n        }\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setSelectedProject(null);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (selectedProject) {\r\n                await axios.patch(`/api/projects/${selectedProject._id}`, formData);\r\n            } else {\r\n                await axios.post('/api/projects', formData);\r\n            }\r\n            fetchProjects();\r\n            handleClose();\r\n        } catch (error) {\r\n            console.error('Error saving project:', error);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        if (window.confirm('Are you sure you want to delete this project?')) {\r\n            try {\r\n                await axios.delete(`/api/projects/${id}`);\r\n                fetchProjects();\r\n            } catch (error) {\r\n                console.error('Error deleting project:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: '100%', px: { xs: 1, sm: 3, md: 6 }, pt: 3 }}>\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\" sx={{ mb: 3}}>\r\n                <Grid item>\r\n                    <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n                        Projects\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    {(user.role === 'admin' || user.role === 'manager') && (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            startIcon={<AddIcon />}\r\n                            onClick={() => handleOpen()}\r\n                        >\r\n                            Add Project\r\n                        </Button>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <TableContainer component={Paper} sx={{ width: '100%' }}>\r\n                <Table sx={{ width: '100%' }}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell>Client</TableCell>\r\n                            <TableCell>Status</TableCell>\r\n                            <TableCell>Priority</TableCell>\r\n                            <TableCell>Start Date</TableCell>\r\n                            <TableCell>End Date</TableCell>\r\n                            <TableCell>Project Manager</TableCell>\r\n                            <TableCell>Team Size</TableCell>\r\n                            <TableCell>Actions</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {projects.map((project) => (\r\n                            <TableRow key={project._id}>\r\n                                <TableCell>{project.name}</TableCell>\r\n                                <TableCell>{project.client?.name}</TableCell>\r\n                                <TableCell>\r\n                                    <Chip \r\n                                        label={project.status}\r\n                                        color={\r\n                                            project.status === 'Completed' ? 'success' :\r\n                                            project.status === 'In Progress' ? 'primary' :\r\n                                            project.status === 'On Hold' ? 'warning' : 'default'\r\n                                        }\r\n                                        size=\"small\"\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <Chip \r\n                                        label={project.priority}\r\n                                        color={\r\n                                            project.priority === 'High' ? 'error' :\r\n                                            project.priority === 'Medium' ? 'warning' : 'info'\r\n                                        }\r\n                                        size=\"small\"\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell>{new Date(project.startDate).toLocaleDateString()}</TableCell>\r\n                                <TableCell>{new Date(project.endDate).toLocaleDateString()}</TableCell>\r\n                                <TableCell>\r\n                                    {project.projectManager?.name}\r\n                                    <Typography variant=\"caption\" display=\"block\" color=\"textSecondary\">\r\n                                        {project.projectManager?.department}\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell>{project.teamMembers?.length || 0}</TableCell>\r\n                                <TableCell>\r\n                                    {(user.role === 'admin' || user.role === 'manager') && (\r\n                                        <>\r\n                                            <Button\r\n                                                size=\"small\"\r\n                                                onClick={() => handleOpen(project)}\r\n                                                startIcon={<EditIcon />}\r\n                                            >\r\n                                                Edit\r\n                                            </Button>\r\n                                            <Button\r\n                                                size=\"small\"\r\n                                                color=\"error\"\r\n                                                onClick={() => handleDelete(project._id)}\r\n                                                startIcon={<DeleteIcon />}\r\n                                            >\r\n                                                Delete\r\n                                            </Button>\r\n                                        </>\r\n                                    )}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <Dialog open={open} onClose={handleClose} maxWidth=\"md\" fullWidth>\r\n                <form onSubmit={handleSubmit}>\r\n                    <DialogTitle>{selectedProject ? 'Edit Project' : 'Add Project'}</DialogTitle>\r\n                    <DialogContent>\r\n                        <Grid container spacing={2} sx={{ mt: 1 }}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    value={formData.name}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <FormControl fullWidth required>\r\n                                    <InputLabel>Client</InputLabel>\r\n                                    <Select\r\n                                        name=\"client\"\r\n                                        value={formData.client}\r\n                                        onChange={handleChange}\r\n                                        label=\"Client\"\r\n                                    >\r\n                                        {clients.map((client) => (\r\n                                            <MenuItem key={client._id} value={client._id}>\r\n                                                {client.name} - {client.company}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Description\"\r\n                                    name=\"description\"\r\n                                    value={formData.description}\r\n                                    onChange={handleChange}\r\n                                    multiline\r\n                                    rows={3}\r\n                                    required\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Start Date\"\r\n                                    name=\"startDate\"\r\n                                    type=\"date\"\r\n                                    value={formData.startDate}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    InputLabelProps={{ shrink: true }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"End Date\"\r\n                                    name=\"endDate\"\r\n                                    type=\"date\"\r\n                                    value={formData.endDate}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    InputLabelProps={{ shrink: true }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <FormControl fullWidth required>\r\n                                    <InputLabel>Status</InputLabel>\r\n                                    <Select\r\n                                        name=\"status\"\r\n                                        value={formData.status}\r\n                                        onChange={handleChange}\r\n                                        label=\"Status\"\r\n                                    >\r\n                                        {statuses.map((status) => (\r\n                                            <MenuItem key={status} value={status}>\r\n                                                {status}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <FormControl fullWidth required>\r\n                                    <InputLabel>Priority</InputLabel>\r\n                                    <Select\r\n                                        name=\"priority\"\r\n                                        value={formData.priority}\r\n                                        onChange={handleChange}\r\n                                        label=\"Priority\"\r\n                                    >\r\n                                        {priorities.map((priority) => (\r\n                                            <MenuItem key={priority} value={priority}>\r\n                                                {priority}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <FormControl fullWidth required>\r\n                                    <InputLabel>Project Manager</InputLabel>\r\n                                    <Select\r\n                                        name=\"projectManager\"\r\n                                        value={formData.projectManager}\r\n                                        onChange={handleChange}\r\n                                        label=\"Project Manager\"\r\n                                    >\r\n                                        {managers.map((manager) => (\r\n                                            <MenuItem key={manager._id} value={manager._id}>\r\n                                                {manager.name} - {manager.department} ({manager.role})\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel>Team Members</InputLabel>\r\n                                    <Select\r\n                                        multiple\r\n                                        name=\"teamMembers\"\r\n                                        value={formData.teamMembers}\r\n                                        onChange={handleChange}\r\n                                        label=\"Team Members\"\r\n                                        renderValue={(selected) => (\r\n                                            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                                                {selected.map((value) => {\r\n                                                    const employee = employees.find(emp => emp._id === value);\r\n                                                    return (\r\n                                                        <Chip \r\n                                                            key={value} \r\n                                                            label={employee ? employee.name : value}\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                    );\r\n                                                })}\r\n                                            </Box>\r\n                                        )}\r\n                                    >\r\n                                        {employees.map((employee) => (\r\n                                            <MenuItem key={employee._id} value={employee._id}>\r\n                                                {employee.name} - {employee.department}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Budget\"\r\n                                    name=\"budget\"\r\n                                    type=\"number\"\r\n                                    value={formData.budget}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    InputProps={{\r\n                                        startAdornment: <Typography>$</Typography>\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                            {selectedProject ? 'Update' : 'Create'}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Projects; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}